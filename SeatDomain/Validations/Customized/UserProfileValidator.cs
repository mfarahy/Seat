//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using SeatDomain.Models;
using Exir.Framework.Common;
using FluentValidation;
using Exir.Framework.Security.DataSecurity.Support;
using Exir.Framework.Security.ObjectValidation.Support;


namespace SeatDomain.Validation
{
    public class UserProfileValidator : AzValidator<UserProfile>
    {
        public UserProfileValidator()
        {
            RuleSet(Constants.RuleSets.WithoutFiles, true, () =>
            {
                SecurityRuleFor().Allowed(AllFieldsExcept(x =>new { x.Avatar }));
            });

            RuleSet(Mode.Any, true, () =>
            {
                SecurityRuleFor().Allowed(AllFields());

                SecurityRuleFor().OperationCondition()
                .Add("UsrPrfl.A", x => true, AllFields())
                .Add(null, x => x.Username == GetData<string>("username"), AllFields())
                .AddEvent(x =>
                {
                    SetData("username", x.UserName);
                });

                RuleFor(p => p.Name).Length(0, 50);
                RuleFor(p => p.LastName).Length(0, 50);
                RuleFor(p => p.Username).NotNull().Length(1, 70);
                RuleFor(p => p.Audit_CreatorUserName).NotNull().Length(1, 50);
                RuleFor(p => p.Audit_CreatorIP).NotNull().Length(1, 50);
                RuleFor(p => p.Audit_CreateDate).NotEmpty().NotNull();
                RuleFor(p => p.Audit_LastModifyDate).NotEmpty().NotNull();
                RuleFor(p => p.Audit_LastModifierUserName).NotNull().Length(1, 50);
                RuleFor(p => p.Audit_LastModifierIP).NotNull().Length(1, 50);

            });
            setBusinessRules();
        }

        private void setBusinessRules()
        {
            RuleSet(Mode.OnDelete, () =>
            {
                SecurityRuleFor().OperationRequired("UsrPrfl.A");
            });
        }
    }

}
