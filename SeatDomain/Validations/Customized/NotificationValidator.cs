//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using SeatDomain.Models;
using Exir.Framework.Common;
using FluentValidation;
using Exir.Framework.Security.DataSecurity.Support;
using Exir.Framework.Security.ObjectValidation.Support;


namespace SeatDomain.Validations
{
    public class NotificationValidator : AzValidator<Notification>
    {
        public NotificationValidator()
        {
            RuleSet(Mode.Any, true, () =>
            {
                SecurityRuleFor().Allowed(AllFields());
                RuleFor(p => p.PortfolioPK).NotNullOrEmptyIf(x => x.Portfolio, Operators.Equal, null);

                RuleFor(p => p.EventObjectId).NotNull().Length(1, 100);

            });
            setBusinessRules();
        }

        private void setBusinessRules()
        {
            RuleSet(Mode.OnInsert | Mode.OnUpdate | Mode.OnDelete, () =>
              {
                  SecurityRuleFor().OperationRequired("Ntfctn.A");
              });

            RuleSet(Mode.Any, () =>
            {
                SecurityRuleFor().RoleCondition()
                .Add(Constants.KnownRoles.admin, x => true)
                .Add(String.Empty, x => x.Owner == GetData<string>("username"))
                .AddEvent(x =>
                {
                    SetData("username", x.UserName.ToLower());
                });
            });

        }
    }

}
