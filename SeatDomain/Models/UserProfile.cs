//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using Exir.Framework.Common;
using System.Linq.Expressions;
using System.Linq;
using ProtoBuf;
using System.ComponentModel.DataAnnotations.Schema;
using Exir.Framework.Common.Serialization;
using System.ComponentModel.DataAnnotations;

namespace SeatDomain.Models
{
            public interface IUserProfile{
    
     int ProfilePK{
      get;
      set;
      }
    
     string Name{
      get;
      set;
      }
    
     string LastName{
      get;
      set;
      }
    
     byte[] Avatar{
      get;
      set;
      }
    
     Nullable<bool> Gender{
      get;
      set;
      }
    
     Nullable<System.DateTime> Birthday{
      get;
      set;
      }
    
     bool PreventAnonyRegRequest{
      get;
      set;
      }
    
     string Username{
      get;
      set;
      }
    
     string Audit_CreatorUserName{
      get;
      set;
      }
    
     string Audit_CreatorIP{
      get;
      set;
      }
    
     System.DateTime Audit_CreateDate{
      get;
      set;
      }
    
     System.DateTime Audit_LastModifyDate{
      get;
      set;
      }
    
     string Audit_LastModifierUserName{
      get;
      set;
      }
    
     string Audit_LastModifierIP{
      get;
      set;
      }
    
     Nullable<int> PhoneNumberHashedConfirmCode{
      get;
      set;
      }
    
     Nullable<System.DateTime> EmailConfirmSendDt{
      get;
      set;
      }
    
     Nullable<System.DateTime> PhoneNumberConfirmSendDt{
      get;
      set;
      }
    
     int PhoneNumberConfirmSendCount{
      get;
      set;
      }
    
     int EmailConfirmSendCount{
      get;
      set;
      }
    
    }// interface
    
    [Table("UserProfiles")]
    [Serializer(typeof(ProtobufSerializer))]
    [ProtoContract]
    [Exir.Framework.Common.Caching.CacheableKey( new string[]{nameof(ProfilePK)} )]
    [Entity]
    [Serializable]
    [DataContract(IsReference = true)]
    public partial class UserProfile:IEntityBase, IUserProfile,IObjectWithChangeTracker, INotifyPropertyChanged, ICloneable
    {
        #region Primitive Properties
    [Key]
    [Required]
    	[ProtoMember(1)]
        [DataMember]
        public virtual int ProfilePK
        {
            get { return _profilePK; }
            set
            {
                if (_profilePK != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && !Typing.IsEquals(_profilePK,Typing.GetDefaultValue(typeof(int))))
                    {
                        throw new InvalidOperationException("The property 'ProfilePK' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _profilePK = value;
                    OnPropertyChanged("ProfilePK");
                }
            }
        }
        protected int _profilePK;
    [MaxLength(50)]
    	[ProtoMember(2)]
        [DataMember]
        public virtual string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    ChangeTracker.RecordOriginalValue("Name", _name);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Name"))
                            ChangeTracker.RecordOriginalValue("Name", _name);
                            
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        protected string _name;
    [MaxLength(50)]
    	[ProtoMember(3)]
        [DataMember]
        public virtual string LastName
        {
            get { return _lastName; }
            set
            {
                if (_lastName != value)
                {
                    ChangeTracker.RecordOriginalValue("LastName", _lastName);
                        if (!ChangeTracker.OriginalValues.ContainsKey("LastName"))
                            ChangeTracker.RecordOriginalValue("LastName", _lastName);
                            
                    _lastName = value;
                    OnPropertyChanged("LastName");
                }
            }
        }
        protected string _lastName;
    	[ProtoMember(4)]
        [DataMember]
        public virtual byte[] Avatar
        {
            get { return _avatar; }
            set
            {
                if (_avatar != value)
                {
                    ChangeTracker.RecordOriginalValue("Avatar", _avatar);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Avatar"))
                            ChangeTracker.RecordOriginalValue("Avatar", _avatar);
                            
                    _avatar = value;
                    OnPropertyChanged("Avatar");
                }
            }
        }
        protected byte[] _avatar;
    	[ProtoMember(5)]
        [DataMember]
        public virtual Nullable<bool> Gender
        {
            get { return _gender; }
            set
            {
                if (_gender != value)
                {
                    ChangeTracker.RecordOriginalValue("Gender", _gender);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Gender"))
                            ChangeTracker.RecordOriginalValue("Gender", _gender);
                            
                    _gender = value;
                    OnPropertyChanged("Gender");
                }
            }
        }
        protected Nullable<bool> _gender;
    	[ProtoMember(6)]
        [DataMember]
        public virtual Nullable<System.DateTime> Birthday
        {
            get { return _birthday; }
            set
            {
                if (_birthday != value)
                {
                    ChangeTracker.RecordOriginalValue("Birthday", _birthday);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Birthday"))
                            ChangeTracker.RecordOriginalValue("Birthday", _birthday);
                            
                    _birthday = value;
                    OnPropertyChanged("Birthday");
                }
            }
        }
        protected Nullable<System.DateTime> _birthday;
    [Required]
    	[ProtoMember(7)]
        [DataMember]
        public virtual bool PreventAnonyRegRequest
        {
            get { return _preventAnonyRegRequest; }
            set
            {
                if (_preventAnonyRegRequest != value)
                {
                    ChangeTracker.RecordOriginalValue("PreventAnonyRegRequest", _preventAnonyRegRequest);
                        if (!ChangeTracker.OriginalValues.ContainsKey("PreventAnonyRegRequest"))
                            ChangeTracker.RecordOriginalValue("PreventAnonyRegRequest", _preventAnonyRegRequest);
                            
                    _preventAnonyRegRequest = value;
                    OnPropertyChanged("PreventAnonyRegRequest");
                }
            }
        }
        protected bool _preventAnonyRegRequest;
    [MaxLength(70)]
    [Required]
    	[ProtoMember(8)]
        [DataMember]
        public virtual string Username
        {
            get { return _username; }
            set
            {
                if (_username != value)
                {
                    ChangeTracker.RecordOriginalValue("Username", _username);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Username"))
                            ChangeTracker.RecordOriginalValue("Username", _username);
                            
                    _username = value;
                    OnPropertyChanged("Username");
                }
            }
        }
        protected string _username;
    [MaxLength(50)]
    [Required]
    [RestfullIgnore]
    	[ProtoMember(9)]
        [DataMember]
        public virtual string Audit_CreatorUserName
        {
            get { return _audit_CreatorUserName; }
            set
            {
                if (_audit_CreatorUserName != value)
                {
                    ChangeTracker.RecordOriginalValue("Audit_CreatorUserName", _audit_CreatorUserName);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Audit_CreatorUserName"))
                            ChangeTracker.RecordOriginalValue("Audit_CreatorUserName", _audit_CreatorUserName);
                            
                    _audit_CreatorUserName = value;
                    OnPropertyChanged("Audit_CreatorUserName");
                }
            }
        }
        protected string _audit_CreatorUserName;
    [MaxLength(50)]
    [Required]
    [RestfullIgnore]
    	[ProtoMember(10)]
        [DataMember]
        public virtual string Audit_CreatorIP
        {
            get { return _audit_CreatorIP; }
            set
            {
                if (_audit_CreatorIP != value)
                {
                    ChangeTracker.RecordOriginalValue("Audit_CreatorIP", _audit_CreatorIP);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Audit_CreatorIP"))
                            ChangeTracker.RecordOriginalValue("Audit_CreatorIP", _audit_CreatorIP);
                            
                    _audit_CreatorIP = value;
                    OnPropertyChanged("Audit_CreatorIP");
                }
            }
        }
        protected string _audit_CreatorIP;
    [Required]
    [RestfullIgnore]
    	[ProtoMember(11)]
        [DataMember]
        public virtual System.DateTime Audit_CreateDate
        {
            get { return _audit_CreateDate; }
            set
            {
                if (_audit_CreateDate != value)
                {
                    ChangeTracker.RecordOriginalValue("Audit_CreateDate", _audit_CreateDate);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Audit_CreateDate"))
                            ChangeTracker.RecordOriginalValue("Audit_CreateDate", _audit_CreateDate);
                            
                    _audit_CreateDate = value;
                    OnPropertyChanged("Audit_CreateDate");
                }
            }
        }
        protected System.DateTime _audit_CreateDate;
    [Required]
    [RestfullIgnore]
    	[ProtoMember(12)]
        [DataMember]
        public virtual System.DateTime Audit_LastModifyDate
        {
            get { return _audit_LastModifyDate; }
            set
            {
                if (_audit_LastModifyDate != value)
                {
                    ChangeTracker.RecordOriginalValue("Audit_LastModifyDate", _audit_LastModifyDate);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Audit_LastModifyDate"))
                            ChangeTracker.RecordOriginalValue("Audit_LastModifyDate", _audit_LastModifyDate);
                            
                    _audit_LastModifyDate = value;
                    OnPropertyChanged("Audit_LastModifyDate");
                }
            }
        }
        protected System.DateTime _audit_LastModifyDate;
    [MaxLength(50)]
    [Required]
    [RestfullIgnore]
    	[ProtoMember(13)]
        [DataMember]
        public virtual string Audit_LastModifierUserName
        {
            get { return _audit_LastModifierUserName; }
            set
            {
                if (_audit_LastModifierUserName != value)
                {
                    ChangeTracker.RecordOriginalValue("Audit_LastModifierUserName", _audit_LastModifierUserName);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Audit_LastModifierUserName"))
                            ChangeTracker.RecordOriginalValue("Audit_LastModifierUserName", _audit_LastModifierUserName);
                            
                    _audit_LastModifierUserName = value;
                    OnPropertyChanged("Audit_LastModifierUserName");
                }
            }
        }
        protected string _audit_LastModifierUserName;
    [MaxLength(50)]
    [Required]
    [RestfullIgnore]
    	[ProtoMember(14)]
        [DataMember]
        public virtual string Audit_LastModifierIP
        {
            get { return _audit_LastModifierIP; }
            set
            {
                if (_audit_LastModifierIP != value)
                {
                    ChangeTracker.RecordOriginalValue("Audit_LastModifierIP", _audit_LastModifierIP);
                        if (!ChangeTracker.OriginalValues.ContainsKey("Audit_LastModifierIP"))
                            ChangeTracker.RecordOriginalValue("Audit_LastModifierIP", _audit_LastModifierIP);
                            
                    _audit_LastModifierIP = value;
                    OnPropertyChanged("Audit_LastModifierIP");
                }
            }
        }
        protected string _audit_LastModifierIP;
    	[ProtoMember(15)]
        [DataMember]
        public virtual Nullable<int> PhoneNumberHashedConfirmCode
        {
            get { return _phoneNumberHashedConfirmCode; }
            set
            {
                if (_phoneNumberHashedConfirmCode != value)
                {
                    ChangeTracker.RecordOriginalValue("PhoneNumberHashedConfirmCode", _phoneNumberHashedConfirmCode);
                        if (!ChangeTracker.OriginalValues.ContainsKey("PhoneNumberHashedConfirmCode"))
                            ChangeTracker.RecordOriginalValue("PhoneNumberHashedConfirmCode", _phoneNumberHashedConfirmCode);
                            
                    _phoneNumberHashedConfirmCode = value;
                    OnPropertyChanged("PhoneNumberHashedConfirmCode");
                }
            }
        }
        protected Nullable<int> _phoneNumberHashedConfirmCode;
    	[ProtoMember(16)]
        [DataMember]
        public virtual Nullable<System.DateTime> EmailConfirmSendDt
        {
            get { return _emailConfirmSendDt; }
            set
            {
                if (_emailConfirmSendDt != value)
                {
                    ChangeTracker.RecordOriginalValue("EmailConfirmSendDt", _emailConfirmSendDt);
                        if (!ChangeTracker.OriginalValues.ContainsKey("EmailConfirmSendDt"))
                            ChangeTracker.RecordOriginalValue("EmailConfirmSendDt", _emailConfirmSendDt);
                            
                    _emailConfirmSendDt = value;
                    OnPropertyChanged("EmailConfirmSendDt");
                }
            }
        }
        protected Nullable<System.DateTime> _emailConfirmSendDt;
    	[ProtoMember(17)]
        [DataMember]
        public virtual Nullable<System.DateTime> PhoneNumberConfirmSendDt
        {
            get { return _phoneNumberConfirmSendDt; }
            set
            {
                if (_phoneNumberConfirmSendDt != value)
                {
                    ChangeTracker.RecordOriginalValue("PhoneNumberConfirmSendDt", _phoneNumberConfirmSendDt);
                        if (!ChangeTracker.OriginalValues.ContainsKey("PhoneNumberConfirmSendDt"))
                            ChangeTracker.RecordOriginalValue("PhoneNumberConfirmSendDt", _phoneNumberConfirmSendDt);
                            
                    _phoneNumberConfirmSendDt = value;
                    OnPropertyChanged("PhoneNumberConfirmSendDt");
                }
            }
        }
        protected Nullable<System.DateTime> _phoneNumberConfirmSendDt;
    [Required]
    	[ProtoMember(18)]
        [DataMember]
        public virtual int PhoneNumberConfirmSendCount
        {
            get { return _phoneNumberConfirmSendCount; }
            set
            {
                if (_phoneNumberConfirmSendCount != value)
                {
                    ChangeTracker.RecordOriginalValue("PhoneNumberConfirmSendCount", _phoneNumberConfirmSendCount);
                        if (!ChangeTracker.OriginalValues.ContainsKey("PhoneNumberConfirmSendCount"))
                            ChangeTracker.RecordOriginalValue("PhoneNumberConfirmSendCount", _phoneNumberConfirmSendCount);
                            
                    _phoneNumberConfirmSendCount = value;
                    OnPropertyChanged("PhoneNumberConfirmSendCount");
                }
            }
        }
        protected int _phoneNumberConfirmSendCount;
    [Required]
    	[ProtoMember(19)]
        [DataMember]
        public virtual int EmailConfirmSendCount
        {
            get { return _emailConfirmSendCount; }
            set
            {
                if (_emailConfirmSendCount != value)
                {
                    ChangeTracker.RecordOriginalValue("EmailConfirmSendCount", _emailConfirmSendCount);
                        if (!ChangeTracker.OriginalValues.ContainsKey("EmailConfirmSendCount"))
                            ChangeTracker.RecordOriginalValue("EmailConfirmSendCount", _emailConfirmSendCount);
                            
                    _emailConfirmSendCount = value;
                    OnPropertyChanged("EmailConfirmSendCount");
                }
            }
        }
        protected int _emailConfirmSendCount;

        #endregion

    
    		public virtual object Clone(){
    			return Clone(new Dictionary<object,object>(),true);
    		}
    
    public   virtual object Clone(Dictionary<object,object> clonedObjects,bool includePrimaryKey)
    {
        UserProfile cloned = new UserProfile();
                clonedObjects.Add(this, cloned);
        				if(includePrimaryKey)
    				     cloned._profilePK=this._profilePK;
             cloned._name=this._name;
             cloned._lastName=this._lastName;
             cloned._avatar=this._avatar;
             cloned._gender=this._gender;
             cloned._birthday=this._birthday;
             cloned._preventAnonyRegRequest=this._preventAnonyRegRequest;
             cloned._username=this._username;
             cloned._audit_CreatorUserName=this._audit_CreatorUserName;
             cloned._audit_CreatorIP=this._audit_CreatorIP;
             cloned._audit_CreateDate=this._audit_CreateDate;
             cloned._audit_LastModifyDate=this._audit_LastModifyDate;
             cloned._audit_LastModifierUserName=this._audit_LastModifierUserName;
             cloned._audit_LastModifierIP=this._audit_LastModifierIP;
             cloned._phoneNumberHashedConfirmCode=this._phoneNumberHashedConfirmCode;
             cloned._emailConfirmSendDt=this._emailConfirmSendDt;
             cloned._phoneNumberConfirmSendDt=this._phoneNumberConfirmSendDt;
             cloned._phoneNumberConfirmSendCount=this._phoneNumberConfirmSendCount;
             cloned._emailConfirmSendCount=this._emailConfirmSendCount;
            
    
        return cloned;
    }
    
    
    public virtual long ComputeHashCode()
    	{
    		var sb = new System.Text.StringBuilder();
    
    						sb.Append(this._profilePK.ToString());
    					// ProfilePK
    			sb.Append("`");
    
    						sb.Append(this._name?.ToString());
    						// Name
    			sb.Append("`");
    
    						sb.Append(this._lastName?.ToString());
    						// LastName
    			sb.Append("`");
    
    						sb.Append(this._avatar?.ToString());
    						// Avatar
    			sb.Append("`");
    
    						sb.Append(this._gender?.ToString());
    						// Gender
    			sb.Append("`");
    
    						sb.Append(this._birthday?.ToString());
    						// Birthday
    			sb.Append("`");
    
    						sb.Append(this._preventAnonyRegRequest.ToString());
    					// PreventAnonyRegRequest
    			sb.Append("`");
    
    						sb.Append(this._username.ToString());
    					// Username
    			sb.Append("`");
    
    						sb.Append(this._audit_CreatorUserName.ToString());
    					// Audit_CreatorUserName
    			sb.Append("`");
    
    						sb.Append(this._audit_CreatorIP.ToString());
    					// Audit_CreatorIP
    			sb.Append("`");
    
    						sb.Append(this._audit_CreateDate.ToString());
    					// Audit_CreateDate
    			sb.Append("`");
    
    						sb.Append(this._audit_LastModifyDate.ToString());
    					// Audit_LastModifyDate
    			sb.Append("`");
    
    						sb.Append(this._audit_LastModifierUserName.ToString());
    					// Audit_LastModifierUserName
    			sb.Append("`");
    
    						sb.Append(this._audit_LastModifierIP.ToString());
    					// Audit_LastModifierIP
    			sb.Append("`");
    
    						sb.Append(this._phoneNumberHashedConfirmCode?.ToString());
    						// PhoneNumberHashedConfirmCode
    			sb.Append("`");
    
    						sb.Append(this._emailConfirmSendDt?.ToString());
    						// EmailConfirmSendDt
    			sb.Append("`");
    
    						sb.Append(this._phoneNumberConfirmSendDt?.ToString());
    						// PhoneNumberConfirmSendDt
    			sb.Append("`");
    
    						sb.Append(this._phoneNumberConfirmSendCount.ToString());
    					// PhoneNumberConfirmSendCount
    			sb.Append("`");
    
    						sb.Append(this._emailConfirmSendCount.ToString());
    					// EmailConfirmSendCount
    			sb.Append("`");
    
    		
    		return sb.ToString().ToLower().FarmhashCode64();
    }
            public virtual T CreateService<T>() 
    				 where T : IService
    		         {
                if (ObjectRegistry.ContainsObject("MMP-ServiceFactory"))
                {
                    var service_factory = (IServiceFactory)ObjectRegistry.GetObject("MMP-ServiceFactory",true);
                    return (T)service_factory.CreateByModel<UserProfile>();
                }
                else
                   {
    					return (T)StaticServiceFactory.CreateByModel<UserProfile>();			   
    				}
            }
    	protected const int LAST_PROTOBUF_MEMBER_INDEX=20;
    
    public virtual void ResetChanges(bool includeNavigations=false)
    {
        if(!includeNavigations){
            ChangeTracker.ResetChanges();
            return;
        }
    
        ResetChanges(new List<object>(), includeNavigations);
    }
    public virtual void ResetChanges(List<object> reseted_objects, bool includeNavigations=false)
    {
        if(reseted_objects.Contains(this)) return;
    
        ChangeTracker.ResetChanges();
         
        reseted_objects.Add(this);
    
       }
    
    public virtual bool Equals(IEntityBase obj)
        {
    		bool result= this.Equals(obj, new List<object>());
    
    	return result;
    }   
    
    public virtual bool Equals(object other,List<object> checked_objects)
    {
    	if(checked_objects.Contains(this)) return true;
    	
    	checked_objects.Add(this);
    
        UserProfile casted_other = other as UserProfile;
    
    	if(casted_other==null) {
    		checked_objects.Remove(this);
    		return false;
    	}
    
             if(!Typing.IsEquals(this.ProfilePK,casted_other.ProfilePK))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Name,casted_other.Name))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.LastName,casted_other.LastName))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Avatar,casted_other.Avatar))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Gender,casted_other.Gender))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Birthday,casted_other.Birthday))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.PreventAnonyRegRequest,casted_other.PreventAnonyRegRequest))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Username,casted_other.Username))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Audit_CreatorUserName,casted_other.Audit_CreatorUserName))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Audit_CreatorIP,casted_other.Audit_CreatorIP))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Audit_CreateDate,casted_other.Audit_CreateDate))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Audit_LastModifyDate,casted_other.Audit_LastModifyDate))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Audit_LastModifierUserName,casted_other.Audit_LastModifierUserName))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.Audit_LastModifierIP,casted_other.Audit_LastModifierIP))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.PhoneNumberHashedConfirmCode,casted_other.PhoneNumberHashedConfirmCode))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.EmailConfirmSendDt,casted_other.EmailConfirmSendDt))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.PhoneNumberConfirmSendDt,casted_other.PhoneNumberConfirmSendDt))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.PhoneNumberConfirmSendCount,casted_other.PhoneNumberConfirmSendCount))
    {
    		checked_objects.Remove(this);
    		return false;
    	}         if(!Typing.IsEquals(this.EmailConfirmSendCount,casted_other.EmailConfirmSendCount))
    {
    		checked_objects.Remove(this);
    		return false;
    	}    
    checked_objects.Remove(this);
    
    return true;
    }
    
        #region Metadata section
            [NotMapped]
            [ProtoIgnore]
            [Newtonsoft.Json.JsonIgnore]
            [Jil.JilDirective(Ignore =true)]
    	    [System.Xml.Serialization.XmlIgnore]
            public virtual IEnumerable<IField> PrimaryKeys { get{ return GetPrimaryKeys(); } }
    
        public virtual IEnumerable<IField> GetFields ()
        {
                var array1 = GetPrimitiveFields();
                var array2 = GetNavigationFields();
                if(array1.Any() && array2.Any()) return array1.Union(array2);
                else if(array1.Any()) return array1;
                else if(array2.Any()) return array2;
                return null;
        }
    
        public virtual IEnumerable<IField> GetPrimaryKeys()
    {
          yield return new BaseField{Name= "ProfilePK", Kind = FieldKinds.Primitive,PropertyType =typeof(int),
    	IsIdentity=true
    	 };
    }
    
    public virtual Type GetFieldType(string propertyName)
    {
        var field = GetFields().Where(x => x.Name == propertyName).FirstOrDefault();
        return field != null ? field.PropertyType: null;
    }
    
    public virtual bool HasField(string propertyName)
    {
        var field = GetFields().Where(x => x.Name == propertyName).FirstOrDefault();
        return field != null;
    }
    
    
        private static IEnumerable<IField> GetPrimitiveFields()
        {
            yield return new BaseField{Name= "ProfilePK", Kind = FieldKinds.PrimaryKey,PropertyType =typeof(int) ,Nullable=false,TargetType =null,
    	IsIdentity=true
        
         };
              yield return new BaseField{Name= "Name", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        ,Size=50
    	,Unicode=true
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "LastName", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        ,Size=50
    	,Unicode=true
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "Avatar", Kind = FieldKinds.Primitive,PropertyType =typeof(byte[]) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "Gender", Kind = FieldKinds.Primitive,PropertyType =typeof(Nullable<bool>) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "Birthday", Kind = FieldKinds.Primitive,PropertyType =typeof(Nullable<System.DateTime>) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "PreventAnonyRegRequest", Kind = FieldKinds.Primitive,PropertyType =typeof(bool) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "Username", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        ,Size=70
    	,Unicode=false
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "Audit_CreatorUserName", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        ,Size=50
    	,Unicode=false
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "Audit_CreatorIP", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        ,Size=50
    	,Unicode=false
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "Audit_CreateDate", Kind = FieldKinds.Primitive,PropertyType =typeof(System.DateTime) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "Audit_LastModifyDate", Kind = FieldKinds.Primitive,PropertyType =typeof(System.DateTime) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "Audit_LastModifierUserName", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        ,Size=50
    	,Unicode=false
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "Audit_LastModifierIP", Kind = FieldKinds.Primitive,PropertyType =typeof(string) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        ,Size=50
    	,Unicode=false
    	,FixedLength=false
    	,DefaultValue=""
        
         };
              yield return new BaseField{Name= "PhoneNumberHashedConfirmCode", Kind = FieldKinds.Primitive,PropertyType =typeof(Nullable<int>) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "EmailConfirmSendDt", Kind = FieldKinds.Primitive,PropertyType =typeof(Nullable<System.DateTime>) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "PhoneNumberConfirmSendDt", Kind = FieldKinds.Primitive,PropertyType =typeof(Nullable<System.DateTime>) ,Nullable=true,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "PhoneNumberConfirmSendCount", Kind = FieldKinds.Primitive,PropertyType =typeof(int) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        
         };
              yield return new BaseField{Name= "EmailConfirmSendCount", Kind = FieldKinds.Primitive,PropertyType =typeof(int) ,Nullable=false,TargetType =null,
    	IsIdentity=null
        
         };
          	
        }
    
    
    
    private static IEnumerable<IField> GetNavigationFields()
    {
                return Enumerable.Empty<IField>();
                 
    }
    
    public virtual Expression GetPrimaryKeyPrediacate()
    {
        var vProfilePK=(int)this.GetValue("ProfilePK");
        Expression<Func<UserProfile,bool>> exp = p => p.ProfilePK == vProfilePK ;
        return exp;        
    
    }
    
    public virtual object GetValue(string propertyName)
    {
        object retVal = null;
        switch(propertyName.ToLower())
        {
            case "profilepk":
                retVal = this.ProfilePK;
                break;
            case "name":
                retVal = this.Name;
                break;
            case "lastname":
                retVal = this.LastName;
                break;
            case "avatar":
                retVal = this.Avatar;
                break;
            case "gender":
                retVal = this.Gender;
                break;
            case "birthday":
                retVal = this.Birthday;
                break;
            case "preventanonyregrequest":
                retVal = this.PreventAnonyRegRequest;
                break;
            case "username":
                retVal = this.Username;
                break;
            case "audit_creatorusername":
                retVal = this.Audit_CreatorUserName;
                break;
            case "audit_creatorip":
                retVal = this.Audit_CreatorIP;
                break;
            case "audit_createdate":
                retVal = this.Audit_CreateDate;
                break;
            case "audit_lastmodifydate":
                retVal = this.Audit_LastModifyDate;
                break;
            case "audit_lastmodifierusername":
                retVal = this.Audit_LastModifierUserName;
                break;
            case "audit_lastmodifierip":
                retVal = this.Audit_LastModifierIP;
                break;
            case "phonenumberhashedconfirmcode":
                retVal = this.PhoneNumberHashedConfirmCode;
                break;
            case "emailconfirmsenddt":
                retVal = this.EmailConfirmSendDt;
                break;
            case "phonenumberconfirmsenddt":
                retVal = this.PhoneNumberConfirmSendDt;
                break;
            case "phonenumberconfirmsendcount":
                retVal = this.PhoneNumberConfirmSendCount;
                break;
            case "emailconfirmsendcount":
                retVal = this.EmailConfirmSendCount;
                break;
        	
                        default:
    							retVal=null;
    			            break;
        }
        return retVal;
    }
    
    		private Dictionary<string,object> __tags;
    		public virtual void AddTag(string key, object value)
            {
                if(__tags==null)__tags=new Dictionary<string,object>();
    			if(!__tags.ContainsKey(key)) __tags.Add(key,value);
            }  
    
    		public virtual object GetTag(string key)
            {
                if(__tags==null)return null;
    			if(!__tags.ContainsKey(key))return null;
    			return __tags[key];
            }
    
            public virtual object RemoveTag(string key)
            {
                if (__tags == null) return null;
                if (__tags.ContainsKey(key)){
    			var result= __tags[key];
                    __tags.Remove(key);
    				return result;
    			}
    			return  null;
            }
            public virtual bool HasKey()
            {
    			
    			return _profilePK!=default(int);
            }
      
     public virtual void StartTracking()
            {
    		if(ChangeTracker.ChangeTrackingEnabled) return;
    		            ChangeTracker.ChangeTrackingEnabled = true;
                        }
    
            public virtual void StopTracking()
            {
    		         ChangeTracker.ChangeTrackingEnabled = false;
                       }
    
    public virtual bool SetValue(string propertyName, object value)
    {
        switch(propertyName.ToLower())
        {
            case "profilepk":
                this.ProfilePK =(int)value;
            break;
            case "name":
                this.Name =(string)value;
            break;
            case "lastname":
                this.LastName =(string)value;
            break;
            case "avatar":
                this.Avatar =(byte[])value;
            break;
            case "gender":
                this.Gender =(Nullable<bool>)value;
            break;
            case "birthday":
                this.Birthday =(Nullable<System.DateTime>)value;
            break;
            case "preventanonyregrequest":
                this.PreventAnonyRegRequest =(bool)value;
            break;
            case "username":
                this.Username =(string)value;
            break;
            case "audit_creatorusername":
                this.Audit_CreatorUserName =(string)value;
            break;
            case "audit_creatorip":
                this.Audit_CreatorIP =(string)value;
            break;
            case "audit_createdate":
                this.Audit_CreateDate =(System.DateTime)value;
            break;
            case "audit_lastmodifydate":
                this.Audit_LastModifyDate =(System.DateTime)value;
            break;
            case "audit_lastmodifierusername":
                this.Audit_LastModifierUserName =(string)value;
            break;
            case "audit_lastmodifierip":
                this.Audit_LastModifierIP =(string)value;
            break;
            case "phonenumberhashedconfirmcode":
                this.PhoneNumberHashedConfirmCode =(Nullable<int>)value;
            break;
            case "emailconfirmsenddt":
                this.EmailConfirmSendDt =(Nullable<System.DateTime>)value;
            break;
            case "phonenumberconfirmsenddt":
                this.PhoneNumberConfirmSendDt =(Nullable<System.DateTime>)value;
            break;
            case "phonenumberconfirmsendcount":
                this.PhoneNumberConfirmSendCount =(int)value;
            break;
            case "emailconfirmsendcount":
                this.EmailConfirmSendCount =(int)value;
            break;
    	
                    default:
                                   return Exir.Framework.Common.Fasterflect.PropertyExtensions.TrySetPropertyValue(this, propertyName, value);
    			            break;
       }   
       return true;
    }
            
        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
     	[NonSerialized]
       private ObjectChangeTracker _changeTracker;
    	  [NotMapped]
            [ProtoIgnore]
            [Newtonsoft.Json.JsonIgnore]
            [Jil.JilDirective(Ignore =true)]
        [System.Xml.Serialization.XmlIgnore]
        public virtual ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                              _propertyChanged += new PropertyChangedEventHandler(delegate(object sender, PropertyChangedEventArgs e)
                        {
                        if(ChangeTracker.ChangeTrackingEnabled)
                            ChangeTracker.RecordPropertyChange(e.PropertyName);
                        });
          }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
           
    
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    	[NotMapped]
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
